#!/bin/sh

plugin="timelapse"

. /sbin/common-plugins

[ "false" = "$timelapse_enabled" ] && die "Timelapse is disabled."

# drop trailing slashes
timelapse_mount=${timelapse_mount%/}
timelapse_device_path=${timelapse_device_path%/}

# wait for mount point
[ -z "$timelapse_mount" ] && hesitate "timelapse_mount is not set"
mountpoint -q "$timelapse_mount" || hesitate "$timelapse_mount is not mounted"
[ -w "$timelapse_mount" ] || hesitate "$timelapse_mount is not writable"

# storage directory
timelapse_storage="$timelapse_mount/$timelapse_device_path"
if [ ! -d "$timelapse_storage" ]; then
	log "Creating $timelapse_storage"
	mkdir -vp "$timelapse_storage" || die "Cannot create directory $timelapse_storage"
fi
[ -w "$timelapse_storage" ] || die "Cannot write to $timelapse_storage"

[ -z "$timelapse_depth" ] && timelapse_depth=7
[ -z "$timelapse_filename" ] && timelapse_filename="%Y/%m/%d/%H%M.jpg"
[ -z "$timelapse_interval" ] && timelapse_interval=1

# delete older files
find "$timelapse_storage" -type f -name '*.jpg' -mtime +$timelapse_depth -exec rm {} \;

# delete empty directories
find "$timelapse_storage" -empty -type d -mindepth 1 -exec rm -r {} \;

clone_snapshot "$timelapse_storage/$(date +"$timelapse_filename")"

exit 0
